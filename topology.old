#include "ns3/core-module.h"
#include "ns3/global-route-manager.h"
#include "ns3/network-module.h"
#include "ns3/internet-module.h"
#include "ns3/bridge-module.h"
#include "ns3/csma-module.h"

using namespace ns3;

int main(int argc, char *argv[])
{
  CommandLine cmd;
  cmd.Parse (argc, argv);

  /* Configuration. */

  /* Build nodes. */
  NodeContainer router_0;
  router_0.Create (1);
  NodeContainer router_1;
  router_1.Create (1);
  NodeContainer router_2;
  router_2.Create (1);
  NodeContainer router_3;
  router_3.Create (1);
  NodeContainer router_4;
  router_4.Create (1);
  NodeContainer router_5;
  router_5.Create (1);
  NodeContainer router_6;
  router_6.Create (1);
  NodeContainer router_7;
  router_7.Create (1);
  NodeContainer router_8;
  router_8.Create (1);
  NodeContainer router_9;
  router_9.Create (1);

  /* Build link. */
  CsmaHelper csma_hub_0;
  csma_hub_0.SetChannelAttribute ("DataRate", DataRateValue (100000000));
  csma_hub_0.SetChannelAttribute ("Delay",  TimeValue (MilliSeconds (10000)));
  CsmaHelper csma_hub_1;
  csma_hub_1.SetChannelAttribute ("DataRate", DataRateValue (100000000));
  csma_hub_1.SetChannelAttribute ("Delay",  TimeValue (MilliSeconds (10000)));
  CsmaHelper csma_hub_2;
  csma_hub_2.SetChannelAttribute ("DataRate", DataRateValue (100000000));
  csma_hub_2.SetChannelAttribute ("Delay",  TimeValue (MilliSeconds (10000)));
  CsmaHelper csma_hub_3;
  csma_hub_3.SetChannelAttribute ("DataRate", DataRateValue (100000000));
  csma_hub_3.SetChannelAttribute ("Delay",  TimeValue (MilliSeconds (10000)));
  CsmaHelper csma_hub_4;
  csma_hub_4.SetChannelAttribute ("DataRate", DataRateValue (100000000));
  csma_hub_4.SetChannelAttribute ("Delay",  TimeValue (MilliSeconds (10000)));
  CsmaHelper csma_hub_5;
  csma_hub_5.SetChannelAttribute ("DataRate", DataRateValue (100000000));
  csma_hub_5.SetChannelAttribute ("Delay",  TimeValue (MilliSeconds (10000)));
  CsmaHelper csma_hub_6;
  csma_hub_6.SetChannelAttribute ("DataRate", DataRateValue (100000000));
  csma_hub_6.SetChannelAttribute ("Delay",  TimeValue (MilliSeconds (10000)));
  CsmaHelper csma_hub_7;
  csma_hub_7.SetChannelAttribute ("DataRate", DataRateValue (100000000));
  csma_hub_7.SetChannelAttribute ("Delay",  TimeValue (MilliSeconds (10000)));
  CsmaHelper csma_hub_8;
  csma_hub_8.SetChannelAttribute ("DataRate", DataRateValue (100000000));
  csma_hub_8.SetChannelAttribute ("Delay",  TimeValue (MilliSeconds (10000)));
  CsmaHelper csma_hub_9;
  csma_hub_9.SetChannelAttribute ("DataRate", DataRateValue (100000000));
  csma_hub_9.SetChannelAttribute ("Delay",  TimeValue (MilliSeconds (10000)));
  CsmaHelper csma_hub_10;
  csma_hub_10.SetChannelAttribute ("DataRate", DataRateValue (100000000));
  csma_hub_10.SetChannelAttribute ("Delay",  TimeValue (MilliSeconds (10000)));

  /* Build link net device container. */
  NodeContainer all_hub_0;
  all_hub_0.Add (router_5);
  all_hub_0.Add (router_3);
  NetDeviceContainer ndc_hub_0 = csma_hub_0.Install (all_hub_0);
  NodeContainer all_hub_1;
  all_hub_1.Add (router_4);
  all_hub_1.Add (router_5);
  NetDeviceContainer ndc_hub_1 = csma_hub_1.Install (all_hub_1);
  NodeContainer all_hub_2;
  all_hub_2.Add (router_4);
  all_hub_2.Add (router_2);
  NetDeviceContainer ndc_hub_2 = csma_hub_2.Install (all_hub_2);
  NodeContainer all_hub_3;
  all_hub_3.Add (router_2);
  all_hub_3.Add (router_1);
  NetDeviceContainer ndc_hub_3 = csma_hub_3.Install (all_hub_3);
  NodeContainer all_hub_4;
  all_hub_4.Add (router_0);
  all_hub_4.Add (router_1);
  NetDeviceContainer ndc_hub_4 = csma_hub_4.Install (all_hub_4);
  NodeContainer all_hub_5;
  all_hub_5.Add (router_0);
  all_hub_5.Add (router_2);
  NetDeviceContainer ndc_hub_5 = csma_hub_5.Install (all_hub_5);
  NodeContainer all_hub_6;
  all_hub_6.Add (router_1);
  all_hub_6.Add (router_8);
  NetDeviceContainer ndc_hub_6 = csma_hub_6.Install (all_hub_6);
  NodeContainer all_hub_7;
  all_hub_7.Add (router_8);
  all_hub_7.Add (router_9);
  NetDeviceContainer ndc_hub_7 = csma_hub_7.Install (all_hub_7);
  NodeContainer all_hub_8;
  all_hub_8.Add (router_3);
  all_hub_8.Add (router_7);
  NetDeviceContainer ndc_hub_8 = csma_hub_8.Install (all_hub_8);
  NodeContainer all_hub_9;
  all_hub_9.Add (router_7);
  all_hub_9.Add (router_6);
  NetDeviceContainer ndc_hub_9 = csma_hub_9.Install (all_hub_9);
  NodeContainer all_hub_10;
  all_hub_10.Add (router_6);
  all_hub_10.Add (router_9);
  NetDeviceContainer ndc_hub_10 = csma_hub_10.Install (all_hub_10);

  /* Install the IP stack. */
  InternetStackHelper internetStackH;
  internetStackH.Install (router_0);
  internetStackH.Install (router_1);
  internetStackH.Install (router_2);
  internetStackH.Install (router_3);
  internetStackH.Install (router_4);
  internetStackH.Install (router_5);
  internetStackH.Install (router_6);
  internetStackH.Install (router_7);
  internetStackH.Install (router_8);
  internetStackH.Install (router_9);

  /* IP assign. */
  Ipv4AddressHelper ipv4;
  ipv4.SetBase ("10.0.0.0", "255.255.255.0");
  Ipv4InterfaceContainer iface_ndc_hub_0 = ipv4.Assign (ndc_hub_0);
  ipv4.SetBase ("10.0.1.0", "255.255.255.0");
  Ipv4InterfaceContainer iface_ndc_hub_1 = ipv4.Assign (ndc_hub_1);
  ipv4.SetBase ("10.0.2.0", "255.255.255.0");
  Ipv4InterfaceContainer iface_ndc_hub_2 = ipv4.Assign (ndc_hub_2);
  ipv4.SetBase ("10.0.3.0", "255.255.255.0");
  Ipv4InterfaceContainer iface_ndc_hub_3 = ipv4.Assign (ndc_hub_3);
  ipv4.SetBase ("10.0.4.0", "255.255.255.0");
  Ipv4InterfaceContainer iface_ndc_hub_4 = ipv4.Assign (ndc_hub_4);
  ipv4.SetBase ("10.0.5.0", "255.255.255.0");
  Ipv4InterfaceContainer iface_ndc_hub_5 = ipv4.Assign (ndc_hub_5);
  ipv4.SetBase ("10.0.6.0", "255.255.255.0");
  Ipv4InterfaceContainer iface_ndc_hub_6 = ipv4.Assign (ndc_hub_6);
  ipv4.SetBase ("10.0.7.0", "255.255.255.0");
  Ipv4InterfaceContainer iface_ndc_hub_7 = ipv4.Assign (ndc_hub_7);
  ipv4.SetBase ("10.0.8.0", "255.255.255.0");
  Ipv4InterfaceContainer iface_ndc_hub_8 = ipv4.Assign (ndc_hub_8);
  ipv4.SetBase ("10.0.9.0", "255.255.255.0");
  Ipv4InterfaceContainer iface_ndc_hub_9 = ipv4.Assign (ndc_hub_9);
  ipv4.SetBase ("10.0.10.0", "255.255.255.0");
  Ipv4InterfaceContainer iface_ndc_hub_10 = ipv4.Assign (ndc_hub_10);

  /* Generate Route. */
  Ipv4GlobalRoutingHelper::PopulateRoutingTables ();

  /* Generate Application. */

  /* Simulation. */
  /* Pcap output. */
  /* Stop the simulation after x seconds. */
  uint32_t stopTime = 1;
  Simulator::Stop (Seconds (stopTime));
  /* Start and clean simulation. */
  Simulator::Run ();
  Simulator::Destroy ();
}
